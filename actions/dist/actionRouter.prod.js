"use strict";var express=require("express"),actions=require("../data/helpers/actionModel.js"),projects=require("../data/helpers/projectModel.js"),router=express.Router();router.post("/:id/actions",function(t,e){if(!t.body.project_id)return e.status(400).json({errorMessage:"Please provide project for the action."});try{actions.insert(t.body).then(function(t){return e.status(201).json(t)}).catch(function(t){e.status(404).json({message:"The project with the specified ID does not exist."})})}catch(t){return console.log(t),e.status(500).json({error:"There was an error while saving the comment to the database"})}}),router.get("/:id/actions",function(t,e){t.id=t.params.id,projects.getProjectActions(t.params.id).then(function(t){return null===t&&e.status(404).json({message:"This project has no actions."}),e.status(200).json(t)}).catch(function(t){return console.log(t),e.status(500).json({error:"The action information could not be retrieved."})})}),router.get("/:id/actions/:id2",function(t,e){t.id=t.params.id,actions.get(t.params.id2).then(function(t){return null===t&&e.status(404).json({message:"This project has no actions."}),e.status(200).json(t)}).catch(function(t){return console.log(t),e.status(500).json({error:"The action information could not be retrieved."})})}),router.delete("/:id/actions/:id2",function(e,o){e.id=e.params.id,actions.remove(e.params.id2).then(function(t){if(!t)return o.status(404).json({message:"The action with the specified ID does not exist."});projects.remove(e.params.id).then(function(t){o.status(204).json()}).catch(function(t){o.status(500).json({error:"The action could not be removed"})})}),router.put("/:id/actions",function(t,e){if(!t.body.notes||!t.body.description||!t.body.project_id)return e.status(400).json({errorMessage:"Please provide project_id and description for the project."});actions.update(t.body,t.params.id).then(function(t){if(null===t)return e.status(404).json({message:"The action with the project ID does not exist."})}).catch(function(t){console.log(t)})})}),module.exports=router;