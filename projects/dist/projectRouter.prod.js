"use strict";var express=require("express"),projects=require("../data/helpers/projectModel.js"),router=express.Router();router.post("",function(e,t){if(!e.body.name||!e.body.description)return t.status(400).json({errorMessage:"Please provide name and description for the post."});projects.insert(e.body).then(function(e){t.status(201).json(e)}).catch(function(e){return console.log(e),t.status(500).json({error:"There was an error while saving the post to the database"})})}),router.get("/",function(e,t){projects.get().then(function(e){t.status(200).json(e)}).catch(function(e){return console.log(e),t.status(500).json({error:"The projects information could not be retrieved."})})}),router.get("/:id",function(e,t){projects.get(e.params.id).then(function(e){return null===e?t.status(404).json({message:"The post with the specified ID does not exist."}):t.status(200).json(e)}).catch(function(e){return console.log(e),t.status(500).json({error:"The post information could not be retrieved."})})}),router.delete("/:id",function(e,t){projects.get(e.params.id).then(function(e){if(null===e)return t.status(404).json({message:"The post with the specified ID does not exist."})}),projects.remove(e.params.id).then(function(e){t.status(204).json()}).catch(function(e){t.status(500).json({error:"The project could not be removed"})})}),router.put("/:id",function(e,t){if(!e.body.name||!e.body.description)return t.status(400).json({errorMessage:"Please provide name and description for the post."});projects.get(e.params.id).then(function(e){if(null===e)return t.status(404).json({message:"The post with the specified ID does not exist."})}).catch(function(e){console.log(e)}),projects.update(e.params.id,e.body).then(function(e){return console.log(t),t.status(200).json(e)}).catch(function(e){return console.log(e),t.status(500).json({error:"The project information could not be modified."})})}),module.exports=router;